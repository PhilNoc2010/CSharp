dotnet new mvc --no-https -o ProjectName

//switch to project directory and run these:

dotnet add package Pomelo.EntityFrameworkCore.MySql --version 6.0.1
dotnet add package Microsoft.EntityFrameworkCore.Design --version 6.0.3


#pragma warning disable CS8618
using System.ComponentModel.DataAnnotations;
namespace YourProjectName.Models;
public class Monster
{
    [Key]
    public int MonsterId { get; set; }
    public string Name { get; set; }
    public int Height { get; set; }
    public string Description { get; set; }
    public DateTime CreatedAt { get; set; } = DateTime.Now;
    public DateTime UpdatedAt { get; set; } = DateTime.Now;
}

create MyContext.cs model file containing the following:
#pragma warning disable CS8618
// We can disable our warnings safely because we know the framework will assign non-null values
// when it constructs this class for us.
using Microsoft.EntityFrameworkCore;
namespace YourProjectName.Models;
// the MyContext class represents a session with our MySQL database, allowing us to query for or save data
// DbContext is a class that comes from EntityFramework, we want to inherit its features
public class MyContext : DbContext
{
    // This line will always be here. It is what constructs our context upon initialization
    public MyContext(DbContextOptions options) : base(options) { }
    // We need to create a new DbSet<Model> for every model in our project that is making a table
    // The name of our table in our database will be based on the name we provide here
    // This is where we provide a plural version of our model to fit table naming standards
    public DbSet<Monster> Monsters { get; set; }
}


add these to appsettings.json:
make sure to update the database setting to the correct db
  "ConnectionStrings":
  {
      "DefaultConnection": "Server=localhost;port=3306;userid=root;password=root;database=petsdb;"
  }

add these to program.cs:
using Microsoft.EntityFrameworkCore;
using ProjectName.Models;
var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");
// And we will add one more service
// Make sure this is BEFORE var app = builder.Build()!!
builder.Services.AddDbContext<MyContext>(options =>
{
    options.UseMySql(connectionString, ServerVersion.AutoDetect(connectionString));
});

run these two commands in the terminal to create the database :
dotnet ef migrations add FirstMigration
dotnet ef database update