// <auto-generated />
using System;
using ExamDay.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamDay.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20231213171451_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ExamDay.Models.ActiveUserCoupon", b =>
                {
                    b.Property<int>("UserCouponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CouponID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("UserCouponID");

                    b.HasIndex("CouponID");

                    b.HasIndex("UserID");

                    b.ToTable("ActiveUserCoupons");
                });

            modelBuilder.Entity("ExamDay.Models.Coupon", b =>
                {
                    b.Property<int>("CouponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CouponCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CouponDesc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CouponSite")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("CouponID");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("ExamDay.Models.ExpiredUserCoupon", b =>
                {
                    b.Property<int>("ExpiredCouponID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CouponID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ExpiredCouponID");

                    b.HasIndex("CouponID");

                    b.HasIndex("UserID");

                    b.ToTable("ExpiredUserCoupons");
                });

            modelBuilder.Entity("ExamDay.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EmailAddr")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ExamDay.Models.ActiveUserCoupon", b =>
                {
                    b.HasOne("ExamDay.Models.Coupon", "ActiveCouponInfo")
                        .WithMany("AvailableCoupons")
                        .HasForeignKey("CouponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamDay.Models.User", "CouponSubmittedBy")
                        .WithMany("SubmittedCoupons")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveCouponInfo");

                    b.Navigation("CouponSubmittedBy");
                });

            modelBuilder.Entity("ExamDay.Models.ExpiredUserCoupon", b =>
                {
                    b.HasOne("ExamDay.Models.Coupon", "ExpiredCouponInfo")
                        .WithMany("ExpiredCoupons")
                        .HasForeignKey("CouponID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamDay.Models.User", "CouponExpiredBy")
                        .WithMany("CouponsMarkedExpired")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CouponExpiredBy");

                    b.Navigation("ExpiredCouponInfo");
                });

            modelBuilder.Entity("ExamDay.Models.Coupon", b =>
                {
                    b.Navigation("AvailableCoupons");

                    b.Navigation("ExpiredCoupons");
                });

            modelBuilder.Entity("ExamDay.Models.User", b =>
                {
                    b.Navigation("CouponsMarkedExpired");

                    b.Navigation("SubmittedCoupons");
                });
#pragma warning restore 612, 618
        }
    }
}
